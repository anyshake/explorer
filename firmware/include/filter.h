#ifndef __FILTER_H
#define __FILTER_H

#include <math.h>
#include <stdint.h>
#include <string.h>

#include "settings.h"

#if ENABLE_COMPENSATION == true
#define LPF_MAG 7.7
#define BPF_MAG 1
#define HPF_MAG 1.0

const float LPF_COEFFS[] = {-0.00029893066596470811583166615755, -0.00035444059106699843386678594470, -0.00041769033715474386883603763465, -0.00049093787038281301582376414672, -0.00057583216559080330210207421260, -0.00067325724686098827043156944683, -0.00078319301938768238514898545333, -0.00090459795855041247834849027498, -0.00103531824692062188533747679742, -0.00117202733301288741264711834589, -0.00131019914126606217170956103502, -0.00144411730911824464328174766337, -0.00156692188554687973113532795111, -0.00167069392027565603170424779478, -0.00174657733033922453295960774966, -0.00178493637862890664434745158218, -0.00177554606590830488070664738842, -0.00170781175201493540076469468403, -0.00157101341114202299777125038105, -0.00135456911621227409081580361772, -0.00104831166207502404948137542107, -0.00064277169724490741588990294630, -0.00012946035622638521955449220080, 0.00049885581789072116695726855085, 0.00124789488944418935044422536151, 0.00212162154476587885842953085103, 0.00312203781003792023643339526018, 0.00424900864186669724453793151042, 0.00550012785561058981098625508821, 0.00687062899863255874266521061600, 0.00835334478415052268662766010721, 0.00993871759980936853029476196753, 0.01161486242023356853236837338272, 0.01336768221384891826286622773523, 0.01518103467212008131359546325712, 0.01703694783589520048150411923871, 0.01891588098072917792369374012651, 0.02079702598207367955640556544950, 0.02265864334170325858353045589411, 0.02447842614595884674910664102754, 0.02623388446850830751921890282574, 0.02790274214578069081338362877887, 0.02946333745815938459644556246531, 0.03089501905580958537878011327393, 0.03217852848099194557063285060394, 0.03329636085994758937234294648988, 0.03423309576269956827632157114749, 0.03497569084895155167025393438962, 0.03551373171824639268789880475197, 0.03583963234360892924357244737621, 0.03594878156683178199726214074872, 0.03583963234360892924357244737621, 0.03551373171824639268789880475197, 0.03497569084895155167025393438962, 0.03423309576269957521521547505472, 0.03329636085994758937234294648988, 0.03217852848099194557063285060394, 0.03089501905580959578712096913478, 0.02946333745815938112699861051169, 0.02790274214578069775227753268609, 0.02623388446850831098866585477936, 0.02447842614595885021855359298115, 0.02265864334170326552242435980133, 0.02079702598207367955640556544950, 0.01891588098072917792369374012651, 0.01703694783589520395095107119232, 0.01518103467212007784414851130350, 0.01336768221384891826286622773523, 0.01161486242023356332819794545230, 0.00993871759980936853029476196753, 0.00835334478415052442135113608401, 0.00687062899863255614057999665079, 0.00550012785561058981098625508821, 0.00424900864186669897926140748723, 0.00312203781003792023643339526018, 0.00212162154476587929211039984523, 0.00124789488944419021780596334992, 0.00049885581789072138379770304795, -0.00012946035622638527376460082507, -0.00064277169724490719904946844920, -0.00104831166207502448316224441527, -0.00135456911621227495817754160612, -0.00157101341114202451565429186076, -0.00170781175201493409972208770142, -0.00177554606590830488070664738842, -0.00178493637862890751170918957058, -0.00174657733033922626768308372647, -0.00167069392027565841694902726289, -0.00156692188554688059849706593951, -0.00144411730911824464328174766337, -0.00131019914126606217170956103502, -0.00117202733301288871368972532849, -0.00103531824692062362006095277422, -0.00090459795855041291202935926918, -0.00078319301938768238514898545333, -0.00067325724686098859569222119248, -0.00057583216559080362736272595825, -0.00049093787038281301582376414672, -0.00041769033715474413988658075603, -0.00035444059106699843386678594470, -0.00029893066596470811583166615755};
const float BPF_COEFFS[] = {-0.00071138554265275197752843583388, -0.00086352849363639100355172217860, -0.00100781061345127679815258936458, -0.00114194665349605503287810925883, -0.00125912967611251720885523486260, -0.00134786429022395039083181966788, -0.00139244718242645436692694893566, -0.00137410047066940997455286588291, -0.00127269819530019209254112499963, -0.00106896316290847471879021934882, -0.00074695607737628203978696994625, -0.00029663667214294164344023929658, 0.00028374827987668785984551322876, 0.00098569964835031271058185531331, 0.00178915554425908025076852325697, 0.00266202930496614934008370312313, 0.00356073136110026571346520718464, 0.00443173717042773338686822981458, 0.00521418007292812069053411505593, 0.00584336093361500358289717382831, 0.00625498272733432652409346630407, 0.00638984474260422419950034012004, 0.00619867426832649507512096320738, 0.00564673884310081843074247132108, 0.00471787323009972402870770835648, 0.00341757418656193912021024061687, 0.00177486268179163257999175762336, -0.00015731482068384331700176825830, -0.00230328141244192209982633023913, -0.00456744862699608178413512860061, -0.00683867136428196846498206440401, -0.00899593664096539138985697547923, -0.01091507896196260672672107006065, -0.01247612763391750707875349490905, -0.01357082843324848922539338502702, -0.01410984913930374631818587261023, -0.01402917892946760336503331245694, -0.01329526653065976268819348149464, -0.01190850986374642275777979705254, -0.00990480680167045088313493295118, -0.00735499648866433982513646228085, -0.00436215554514259463286807161353, -0.00105685427361484744236685973107, 0.00240938505065579032515810098403, 0.00587206220873432750695375403893, 0.00916263856679260489668248368389, 0.01211790372336225309057855525907, 0.01458919436653640516743379862419, 0.01645089189515672872810014837341, 0.01760766511647390841766025459947, 0.01800000000000000210942374678780, 0.01760766511647390841766025459947, 0.01645089189515672872810014837341, 0.01458919436653640516743379862419, 0.01211790372336225656002550721269, 0.00916263856679260489668248368389, 0.00587206220873432750695375403893, 0.00240938505065579075883896997823, -0.00105685427361484722552642523397, -0.00436215554514259550022980960193, -0.00735499648866434069249820026926, -0.00990480680167045088313493295118, -0.01190850986374642622722674900615, -0.01329526653065976268819348149464, -0.01402917892946760336503331245694, -0.01410984913930374805290934858704, -0.01357082843324848402122295709660, -0.01247612763391750707875349490905, -0.01091507896196260152255064213023, -0.00899593664096539138985697547923, -0.00683867136428197106706727836922, -0.00456744862699608091677339061221, -0.00230328141244192209982633023913, -0.00015731482068384337121187688258, 0.00177486268179163257999175762336, 0.00341757418656193998757197860527, 0.00471787323009972749815466031009, 0.00564673884310082103282768528629, 0.00619867426832649767720617717259, 0.00638984474260422246477686414323, 0.00625498272733432825881694228087, 0.00584336093361500791970586377033, 0.00521418007292812502734280499794, 0.00443173717042772991742127786097, 0.00356073136110026571346520718464, 0.00266202930496615020744544111153, 0.00178915554425908198549199923377, 0.00098569964835031422846489679301, 0.00028374827987668802247583910159, -0.00029663667214294164344023929658, -0.00074695607737628203978696994625, -0.00106896316290847580299239183432, -0.00127269819530019426094546997064, -0.00137410047066941062507416937422, -0.00139244718242645436692694893566, -0.00134786429022395104135312315918, -0.00125912967611251807621697285100, -0.00114194665349605503287810925883, -0.00100781061345127744867389285588, -0.00086352849363639100355172217860, -0.00071138554265275197752843583388};
const float HPF_COEFFS[] = {0.00029893066596470811583166615755, 0.00035444059106699843386678594470, 0.00041769033715474386883603763465, 0.00049093787038281301582376414672, 0.00057583216559080330210207421260, 0.00067325724686098827043156944683, 0.00078319301938768238514898545333, 0.00090459795855041247834849027498, 0.00103531824692062188533747679742, 0.00117202733301288741264711834589, 0.00131019914126606217170956103502, 0.00144411730911824464328174766337, 0.00156692188554687973113532795111, 0.00167069392027565603170424779478, 0.00174657733033922453295960774966, 0.00178493637862890664434745158218, 0.00177554606590830488070664738842, 0.00170781175201493540076469468403, 0.00157101341114202299777125038105, 0.00135456911621227409081580361772, 0.00104831166207502404948137542107, 0.00064277169724490741588990294630, 0.00012946035622638521955449220080, -0.00049885581789072116695726855085, -0.00124789488944418935044422536151, -0.00212162154476587885842953085103, -0.00312203781003792023643339526018, -0.00424900864186669724453793151042, -0.00550012785561058981098625508821, -0.00687062899863255874266521061600, -0.00835334478415052268662766010721, -0.00993871759980936853029476196753, -0.01161486242023356853236837338272, -0.01336768221384891826286622773523, -0.01518103467212008131359546325712, -0.01703694783589520048150411923871, -0.01891588098072917792369374012651, -0.02079702598207367955640556544950, -0.02265864334170325858353045589411, -0.02447842614595884674910664102754, -0.02623388446850830751921890282574, -0.02790274214578069081338362877887, -0.02946333745815938459644556246531, -0.03089501905580958537878011327393, -0.03217852848099194557063285060394, -0.03329636085994758937234294648988, -0.03423309576269956827632157114749, -0.03497569084895155167025393438962, -0.03551373171824639268789880475197, -0.03583963234360892924357244737621, 0.96405121843316821106384395534405, -0.03583963234360892924357244737621, -0.03551373171824639268789880475197, -0.03497569084895155167025393438962, -0.03423309576269957521521547505472, -0.03329636085994758937234294648988, -0.03217852848099194557063285060394, -0.03089501905580959578712096913478, -0.02946333745815938112699861051169, -0.02790274214578069775227753268609, -0.02623388446850831098866585477936, -0.02447842614595885021855359298115, -0.02265864334170326552242435980133, -0.02079702598207367955640556544950, -0.01891588098072917792369374012651, -0.01703694783589520395095107119232, -0.01518103467212007784414851130350, -0.01336768221384891826286622773523, -0.01161486242023356332819794545230, -0.00993871759980936853029476196753, -0.00835334478415052442135113608401, -0.00687062899863255614057999665079, -0.00550012785561058981098625508821, -0.00424900864186669897926140748723, -0.00312203781003792023643339526018, -0.00212162154476587929211039984523, -0.00124789488944419021780596334992, -0.00049885581789072138379770304795, 0.00012946035622638527376460082507, 0.00064277169724490719904946844920, 0.00104831166207502448316224441527, 0.00135456911621227495817754160612, 0.00157101341114202451565429186076, 0.00170781175201493409972208770142, 0.00177554606590830488070664738842, 0.00178493637862890751170918957058, 0.00174657733033922626768308372647, 0.00167069392027565841694902726289, 0.00156692188554688059849706593951, 0.00144411730911824464328174766337, 0.00131019914126606217170956103502, 0.00117202733301288871368972532849, 0.00103531824692062362006095277422, 0.00090459795855041291202935926918, 0.00078319301938768238514898545333, 0.00067325724686098859569222119248, 0.00057583216559080362736272595825, 0.00049093787038281301582376414672, 0.00041769033715474413988658075603, 0.00035444059106699843386678594470, 0.00029893066596470811583166615755};
#endif

#define FIR_NUM_TAPS 101

typedef struct {
    float coeffs[FIR_NUM_TAPS];
    float state[FIR_NUM_TAPS - 1];
} filter_fir_t;

// To filter out low frequency noise lower than 0.2 Hz
// Which is the lowest frequency that can be measured by the geophone
const float PRE_PROC_HPF_COEFFS[][6] = {
    {0.98371517, -1.96743035, 0.98371517, 1.0, -1.97689135, 0.97704745},
    {1.0, -2.0, 1.0, 1.0, -1.99027124, 0.9904284},
};

#define IIR_SOS_SECTIONS 2

typedef struct {
    float sos[IIR_SOS_SECTIONS][6];
    float state[IIR_SOS_SECTIONS][2];
} filter_iir_sos_t;

void filter_fir_apply(filter_fir_t* filter, float* input, uint16_t input_size, float* output);
void apply_data_compensation(int32_t* arr, uint16_t len, filter_fir_t* lowpass_filter, filter_fir_t* bandpass_filter, filter_fir_t* highpass_filter);
void apply_data_pre_processing(int32_t* arr, uint16_t len, filter_iir_sos_t* pre_processing_filter);
void filter_iir_sos_apply(filter_iir_sos_t* filter, float* input, uint16_t input_size, float* output);

#endif
