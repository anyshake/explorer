

ANYSHAKE_LOGO_BITMAP = [
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF0, 0xE0, 0x00, 0x00,
    0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF,
    0xFF, 0xFE, 0x00, 0xE0, 0xF0, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xEC, 0xFC, 0xBC, 0xFC, 0xF8, 0xC0, 0x00, 0x00, 0x30,
    0xF0, 0xF0, 0x70, 0x30, 0x70, 0xF0, 0xE0, 0x00, 0x30, 0xF0, 0xF0, 0xB0, 0x00, 0xB0, 0xF0, 0xF0,
    0x30, 0x00, 0x38, 0x7C, 0xFC, 0xCC, 0xCC, 0xDC, 0xDC, 0x98, 0x00, 0x06, 0xFE, 0xFE, 0x30, 0x30,
    0x30, 0xF0, 0xE0, 0x00, 0x00, 0xA0, 0xB0, 0xB0, 0xB0, 0xB0, 0xF0, 0xE0, 0x00, 0x04, 0x0E, 0xFE,
    0xFE, 0xE0, 0xF0, 0x70, 0x30, 0x30, 0x00, 0xC0, 0xE0, 0xF0, 0xB0, 0xB0, 0xF0, 0xE0, 0xC0, 0x00,
    0xC0, 0xE0, 0xE0, 0xC0, 0x00, 0xFC, 0xFE, 0xFE, 0xFC, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF,
    0xFF, 0xFF, 0xFF, 0x00, 0xF0, 0xF8, 0xF8, 0xF0, 0x00, 0xFE, 0xFF, 0xFF, 0xFE, 0x00, 0xFF, 0xFF,
    0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFE, 0xFF, 0xFF, 0xFE, 0x00, 0xE0, 0xF0, 0xF0,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0F, 0x0F, 0x0D, 0x01, 0x01, 0x0F, 0x0F, 0x0F, 0x0C, 0x0C,
    0x0F, 0x0F, 0x0C, 0x00, 0x0C, 0x0F, 0x0F, 0x0C, 0x60, 0x60, 0x63, 0x7F, 0x7E, 0x6F, 0x03, 0x00,
    0x00, 0x00, 0x07, 0x0F, 0x0E, 0x0C, 0x0C, 0x0E, 0x07, 0x07, 0x00, 0x0C, 0x0F, 0x0F, 0x0C, 0x00,
    0x0E, 0x0F, 0x0F, 0x0C, 0x03, 0x07, 0x0F, 0x0D, 0x0D, 0x0D, 0x0F, 0x0F, 0x0C, 0x04, 0x0E, 0x0F,
    0x0F, 0x01, 0x0F, 0x0F, 0x0E, 0x0E, 0x00, 0x03, 0x07, 0x0F, 0x0D, 0x0D, 0x0D, 0x0D, 0x01, 0x00,
    0x01, 0x03, 0x03, 0x01, 0x00, 0x0F, 0x1F, 0x1F, 0x0F, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x7F,
    0xFF, 0xFF, 0x7F, 0x00, 0x03, 0x07, 0x07, 0x03, 0x00, 0x1F, 0x3F, 0x3F, 0x1F, 0x00, 0xFF, 0xFF,
    0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x1F, 0x3F, 0x3F, 0x1F, 0x00, 0x00, 0x01, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xFC, 0xFC, 0xFC, 0xEC, 0xFC, 0x0C, 0xBC, 0xBC, 0x00, 0x30,
    0x70, 0xF0, 0xF0, 0xC0, 0xF0, 0x70, 0x30, 0x00, 0x30, 0xF0, 0xF0, 0x30, 0x30, 0x30, 0x30, 0xF0,
    0xE0, 0x00, 0x00, 0x06, 0x06, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0x30, 0x38, 0x38,
    0x30, 0xF0, 0xE0, 0x00, 0x00, 0x30, 0xF0, 0xF0, 0xF0, 0x30, 0x30, 0x30, 0x20, 0x00, 0xE0, 0xF0,
    0xF8, 0xD8, 0xD8, 0xF8, 0xF0, 0xE0, 0x00, 0x30, 0x30, 0xF0, 0xF0, 0xF0, 0x30, 0x30, 0x20, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x07, 0x03, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F,
    0x3F, 0x1F, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x07, 0x07, 0x07, 0x06, 0x07, 0x06, 0x07, 0x07, 0x00, 0x06,
    0x07, 0x07, 0x07, 0x01, 0x07, 0x07, 0x06, 0x04, 0x30, 0x3F, 0x3F, 0x36, 0x36, 0x06, 0x06, 0x07,
    0x03, 0x00, 0x06, 0x06, 0x06, 0x07, 0x07, 0x06, 0x06, 0x06, 0x00, 0x03, 0x07, 0x06, 0x0E, 0x0E,
    0x06, 0x07, 0x03, 0x00, 0x06, 0x06, 0x07, 0x07, 0x07, 0x06, 0x06, 0x06, 0x00, 0x00, 0x01, 0x03,
    0x07, 0x06, 0x06, 0x06, 0x06, 0x00, 0x00, 0x06, 0x06, 0x07, 0x07, 0x07, 0x06, 0x06, 0x00, 0x00,
]


def rle_compress(data):
    output = []
    i = 0
    while i < len(data):
        value = data[i]
        count = 1
        while i + count < len(data) and data[i + count] == value and count < 255:
            count += 1
        output.append(count)
        output.append(value)
        i += count
    return output


def print_bitmap_rle(bitmap):
    print("static const uint8_t ANYSHAKE_LOGO_BITMAP[] = {")
    for i in range(0, len(bitmap), 2):
        print(f"    {bitmap[i]}, 0x{bitmap[i+1]:02X},")
    print("};")


def main():
    compressed_bitmap = rle_compress(ANYSHAKE_LOGO_BITMAP)
    print_bitmap_rle(compressed_bitmap)


if __name__ == "__main__":
    main()
